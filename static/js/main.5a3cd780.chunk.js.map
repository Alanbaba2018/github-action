{"version":3,"sources":["charts/util.js","charts/lockAmount.js","charts/everyIncrease.js","hooks/useDebouce.js","charts/kick.js","charts/kickMoney.js","App.js","reportWebVitals.js","index.js"],"names":["jsonToExcel","json","opts","sheetName","fileName","retType","Promise","resolve","reject","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","bs","Object","assign","bookType","bookSST","type","blob","Blob","__s2ab","File","err","console","log","$message","error","message","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","getSeries","a","b","c","d","e","series","day","start","Date","prev","actualTimes","Math","floor","leftRatio","baseCount","g","f","amount","push","round","LockAmount","chartRef","useRef","Form","useForm","form","useState","setSeries","download","useCallback","cellStyles","defaultCellStyle","font","name","sz","color","fill","fgColor","rgb","showGridLines","map","date","number","year","getFullYear","month","getMonth","getDate","useEffect","chartInstance","echarts","current","option","title","text","left","textStyle","tooltip","trigger","axisPointer","label","backgroundColor","grid","show","right","bottom","containLabel","dataZoom","realtime","end","xAxis","boundaryGap","splitLine","yAxis","smooth","data","setOption","className","layout","initialValues","ratio","interval","times","accelerateRate","onValuesChange","getFieldsValue","Item","span","size","placeholder","defaultValue","addonAfter","onClick","ref","EveryIncrease","emphasis","focus","useDebounce","fn","delay","timerRef","args","clearTimeout","setTimeout","apply","step","count","E","getNumber","H","random","res","Array","index","result","n","rate","toFixed","Kick","formChange","onFormChange","money","spot","forEach","time","sum","KickMoney","setSpot","_spot","_series","disabled","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3cd780.chunk.js","sourcesContent":["import * as XLSX from 'xlsx'\n\n// 目前支持一个sheet，之后再扩展\nexport function jsonToExcel ({\n  json,\n  opts = {},\n  sheetName = 'default',\n  fileName,\n  retType\n}) {\n  return new Promise((resolve, reject) => {\n    try {\n      const ws = XLSX.utils.json_to_sheet(json)\n      const wb = XLSX.utils.book_new()\n      XLSX.utils.book_append_sheet(wb, ws, sheetName)\n      const defaultOpts = { bookType: 'xlsx', bookSST: false, type: 'binary' }\n      const bs = XLSX.write(wb, Object.assign(defaultOpts, opts))\n      if (retType === 'file') {\n        XLSX.writeFile(wb, fileName)\n        resolve()\n      }\n      const blob = new Blob([__s2ab(bs)], { type: '' }) // 构造blob\n      if (retType === 'blob') {\n        resolve(blob)\n      }\n      const fileObj = new File([blob], fileName) // 默认构造file对象返回\n      resolve(fileObj)\n    } catch (err) {\n      console.log(err)\n      this.$message.error(err.message)\n      reject(err)\n    }\n  })\n}\n\nfunction __s2ab (s) {\n  // 字符串转字符流\n  let buf = new ArrayBuffer(s.length)\n  let view = new Uint8Array(buf)\n  for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xff\n  return buf\n}\n","import React, { useRef, useEffect, useState, useCallback } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport { jsonToExcel } from './util'\nimport './common-chart.css';\n\nconst Title = '每日最大流通量'\n//1 2 3  4  5   \n// 4 7 10 13 16 19 \n// 每日解锁量 初次解锁量  解锁间隔 解锁次数\nconst getSeries = (a, b, c, d, e) => {\n  const series = []\n  let day = 0\n  const start = +new Date(2022, 7, 1)\n  let prev = 0\n  const actualTimes = Math.floor(d / e)\n  const leftRatio = 1 - actualTimes * e / d\n  const baseCount = c * a * (100 - b) * 0.01\n  while(true) {\n    let g = 0\n    if (day >= c && day % c === 0) {\n      const f = Math.floor(day / c)\n      if (f <= actualTimes) {\n        g = f * baseCount / d * e\n      } else {\n        const everyUnlockNumber = e <= d ? baseCount / d * e : baseCount\n        g = baseCount * leftRatio + actualTimes * everyUnlockNumber\n      }\n    }\n    const amount = a * (b * 0.01) + g\n    series.push([start + day * 24 * 3600 * 1000, Math.round(prev + amount)])\n    if (prev > 35000000) break\n    prev+=amount\n    day++\n  }\n  return series\n}\n\nconst LockAmount = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [series, setSeries] = useState(getSeries(50000, 5, 3, 60, 1))\n\n  const onFormChange = () => {\n    console.log(form.getFieldsValue())\n    const { amount, ratio, interval, times, accelerateRate } = form.getFieldsValue()\n    if (amount && ratio && interval && times && accelerateRate) {\n      setSeries(getSeries(+amount, +ratio, +interval, +times, +accelerateRate))\n    }\n  }\n\n  const download = useCallback(() => {\n    const defaultCellStyle = {\n      font: { name: 'Verdana', sz: 13, color: 'FF00FF88' },\n      fill: { fgColor: { rgb: 'FFFFAA00' } }\n    }\n    const opts = {\n      cellStyles: true,\n      defaultCellStyle: defaultCellStyle,\n      showGridLines: false\n    }\n    jsonToExcel({\n      json: series.map(([date, number]) => {\n        const d = new Date(date)\n        const year = d.getFullYear()\n        const month = d.getMonth() + 1\n        const day = d.getDate()\n        return {\n          '日期': `${year}-${month}-${day}`, \n          '数量': number\n        }\n      }),\n      sheetName: '每日最大流通量',\n      fileName: '每日最大流通量.xlsx',\n      opts,\n      retType: 'file'\n    })\n  }, [series])\n  \n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      dataZoom: [\n        {\n          show: true,\n          realtime: true,\n          start: 0,\n          end: 5\n        }\n      ],\n      xAxis: [\n        {\n          type: 'time',\n          boundaryGap: false,\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '解锁量',\n          type: 'line',\n          smooth: true,\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ amount: '50000', ratio: '5', interval: '3', times: '60', accelerateRate: '1' }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"amount\" label=\"每日产出(a)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={18}>\n              <Input size=\"small\" placeholder=\"daily lock number\" defaultValue={50000} />\n            </Col>\n          </Row>\n        </Form.Item>\n        \n        <Form.Item name=\"ratio\" label=\"首次解锁(b)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"First unlock ratio\" defaultValue={5} addonAfter=\"%\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"interval\" label=\"解锁间隔(c)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock interval\" defaultValue={3} addonAfter=\"天\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"times\" label=\"解锁次数(d)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock times\" defaultValue={60} addonAfter=\"次\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"accelerateRate\" label=\"加速率(e)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"acceleration rate\" defaultValue={1} />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item className=\"chart-header-label\">\n          <Button size=\"small\" type=\"primary\" onClick={download}>下载</Button>\n        </Form.Item>\n\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { LockAmount }","import React, { useRef, useEffect, useState, useCallback } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport { jsonToExcel } from './util'\nimport './common-chart.css';\n\nconst Title = '每日增量'\n//1 2 3  4  5   \n// 4 7 10 13 16 19 \n// 每日解锁量 初次解锁量  解锁间隔 解锁次数\nconst getSeries = (a, b, c, d, e) => {\n  const series = []\n  let day = 0\n  const start = +new Date(2022, 7, 1)\n  let prev = 0\n  const actualTimes = Math.floor(d / e)\n  const leftRatio = 1 - actualTimes * e / d\n  const baseCount = c * a * (100 - b) * 0.01\n  while(true) {\n    let g = 0\n    if (day >= c && day % c === 0) {\n      const f = Math.floor(day / c)\n      if (f <= actualTimes) {\n        g = f * baseCount / d * e\n      } else {\n        const everyUnlockNumber = e <= d ? baseCount / d * e : baseCount\n        g = baseCount * leftRatio + actualTimes * everyUnlockNumber\n      }\n    }\n    const amount = a * (b * 0.01) + g\n    series.push([start + day * 24 * 3600 * 1000, Math.round(amount)])\n    if (prev > 35000000) break\n    prev+=amount\n    day++\n  }\n  return series\n}\n\nconst EveryIncrease = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [series, setSeries] = useState(getSeries(50000, 5, 3, 60, 1))\n\n  const onFormChange = () => {\n    console.log(form.getFieldsValue())\n    const { amount, ratio, interval, times, accelerateRate } = form.getFieldsValue()\n    if (amount && ratio && interval && times && accelerateRate) {\n      setSeries(getSeries(+amount, +ratio, +interval, +times, +accelerateRate))\n    }\n  }\n\n  const download = useCallback(() => {\n    const defaultCellStyle = {\n      font: { name: 'Verdana', sz: 13, color: 'FF00FF88' },\n      fill: { fgColor: { rgb: 'FFFFAA00' } }\n    }\n    const opts = {\n      cellStyles: true,\n      defaultCellStyle: defaultCellStyle,\n      showGridLines: false\n    }\n    jsonToExcel({\n      json: series.map(([date, number]) => {\n        const d = new Date(date)\n        const year = d.getFullYear()\n        const month = d.getMonth() + 1\n        const day = d.getDate()\n        return {\n          '日期': `${year}-${month}-${day}`, \n          '数量': number\n        }\n      }),\n      sheetName: '每日新增量',\n      fileName: '每日新增量.xlsx',\n      opts,\n      retType: 'file'\n    })\n  }, [series])\n  \n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#00DDFF'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      dataZoom: [\n        {\n          show: true,\n          realtime: true,\n          start: 0,\n          end: 5\n        }\n      ],\n      xAxis: [\n        {\n          type: 'time',\n          boundaryGap: false,\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '增量',\n          type: 'bar',\n          emphasis: {\n            focus: 'series'\n          },\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ amount: '50000', ratio: '5', interval: '3', times: '60', accelerateRate: '1' }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"amount\" label=\"每日产出(a)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={18}>\n              <Input size=\"small\" placeholder=\"daily lock number\" defaultValue={50000} />\n            </Col>\n          </Row>\n        </Form.Item>\n        \n        <Form.Item name=\"ratio\" label=\"首次解锁(b)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"First unlock ratio\" defaultValue={5} addonAfter=\"%\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"interval\" label=\"解锁间隔(c)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock interval\" defaultValue={3} addonAfter=\"天\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"times\" label=\"解锁次数(d)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock times\" defaultValue={60} addonAfter=\"次\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"accelerateRate\" label=\"加速率(e)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"acceleration rate\" defaultValue={1} />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item className=\"chart-header-label\">\n          <Button size=\"small\" type=\"primary\" onClick={download}>下载</Button>\n        </Form.Item>\n\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { EveryIncrease }","import { useCallback, useRef } from \"react\";\n\n\nexport const useDebounce = (fn, delay) => {\n  const timerRef = useRef()\n  return useCallback((...args) => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current)\n    }\n    timerRef.current = setTimeout(() => {\n      fn.apply(null, args)\n    }, delay)\n  }, [fn, delay])\n}","import React, { useRef, useEffect, useState, useCallback } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col } from 'antd';\nimport './common-chart.css';\nimport { useDebounce } from '../hooks'\n\nconst Title = '分布频率'\n\nconst getSeries = (step, count) => {\n  const base = 100\n  const E = 2 ** 52\n  const times = 100000000\n\n  const getNumber = () => {\n    const H = Math.random() * (E - 1)\n    return Math.floor((100 * E - H) / (E - H))\n  }\n  const res = [...new Array(count)].fill(0)\n  let index = 0\n  for (let i = 0; i < times; i++) {\n    const result = getNumber()\n    index = Math.floor((result - base) / step)\n    if (index <= count - 1) {\n      res[index]++\n    }\n  }\n  // 100-200 200-300 300-400 400-500 500-600 >=600\n  return res.map((n, index) => {\n    const rate = (n / times * 100).toFixed(2)\n    return [`${base + index * step} ≤ X < ${base + (index + 1) * step}`, rate]\n  })\n}\n\nconst Step = 10\nconst Count = 50\n\nconst Kick = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [series, setSeries] = useState(getSeries(Step, Count))\n\n  const formChange = useCallback(() => {\n    const { step, count } = form.getFieldsValue()\n    if (+step && +count) {\n      console.log('set')\n      setSeries(getSeries(+step, +count))\n    }\n  }, [form])\n\n  const onFormChange = useDebounce(formChange, 500)\n\n  \n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#37A2FF', '#FF0087', '#FFBF00'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          boundaryGap: false,\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '比例',\n          type: 'line',\n          smooth: true,\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ step: `${Step}`, count: `${Count}` }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"step\" label=\"步长\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"step\" defaultValue={Step} />\n            </Col>\n          </Row>\n        </Form.Item>\n        \n        <Form.Item name=\"count\" label=\"条数\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"count\" defaultValue={Count} />\n            </Col>\n          </Row>\n        </Form.Item>\n\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { Kick }","import React, { useRef, useEffect, useState, useCallback } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col, Button } from 'antd';\nimport './common-chart.css';\nimport { useDebounce } from '../hooks'\n\nconst Title = '收益分布'\n\nconst getSeries = (money) => {\n  const base = 100\n  const E = 2 ** 52\n  const times = [100, 500, 1000, 2000, 5000, 10000]\n  const series = []\n\n  const getNumber = () => {\n    const H = Math.random() * (E - 1)\n    return Math.floor((100 * E - H) / (E - H))\n  }\n  const spot = getNumber()\n  times.forEach(time => {\n    let sum = 0\n    for (let i = 0; i < time; i++) {\n      const result = getNumber()\n      if (spot > result) {\n        sum += (spot - result) / base  * money\n      } else {\n        sum -= money\n      }\n      \n    }\n    series.push([`${time}次`, sum])\n  })\n  \n  // 100-200 200-300 300-400 400-500 500-600 >=600\n  return {\n    series,\n    spot,\n  }\n}\n\nconst KickMoney = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [spot, setSpot] = useState('')\n  const [series, setSeries] = useState(getSeries(100).series)\n\n  const formChange = useCallback(() => {\n    const { money } = form.getFieldsValue()\n    if (+money) {\n      const { spot: _spot, series: _series } = getSeries(+money)\n      setSeries(_series)\n      setSpot(_spot)\n    }\n  }, [form])\n\n  const onFormChange = useDebounce(formChange, 500)\n\n  useEffect(() => {\n    formChange()\n  }, [formChange])\n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#37A2FF', '#FF0087', '#FFBF00'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      xAxis: [\n        {\n          type: 'category',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '比例',\n          type: 'bar',\n          smooth: true,\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ money: `100` }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"money\" label=\"投注金额\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"money\" defaultValue={100} />\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item name=\"spot\" label=\"彩票金额\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input disabled size=\"small\" placeholder=\"money\" value={spot} />\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item label=\"\">\n          <Button onClick={formChange}>刷新</Button>\n        </Form.Item>\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { KickMoney }","import React from 'react'\nimport './App.css';\nimport { LockAmount, EveryIncrease, Kick, KickMoney } from './charts'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"line-container\">\n        <LockAmount />\n      </div>\n      <div className=\"line-container\">\n        <EveryIncrease />\n      </div>\n      <div className=\"line-container\">\n        <Kick />\n      </div>\n      <div className=\"line-container\">\n        <KickMoney />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}