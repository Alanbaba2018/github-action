{"version":3,"sources":["charts/lockAmount.js","charts/everyIncrease.js","App.js","reportWebVitals.js","index.js"],"names":["getSeries","a","b","c","d","e","series","day","start","Date","prev","actualTimes","Math","floor","leftRatio","baseCount","g","f","amount","push","round","LockAmount","chartRef","useRef","Form","useForm","form","useState","setSeries","useEffect","chartInstance","echarts","current","option","color","title","text","left","textStyle","tooltip","trigger","axisPointer","type","label","backgroundColor","grid","show","right","bottom","containLabel","dataZoom","realtime","end","xAxis","boundaryGap","splitLine","yAxis","name","smooth","data","setOption","className","layout","initialValues","ratio","interval","times","accelerateRate","onValuesChange","console","log","getFieldsValue","Item","span","size","placeholder","defaultValue","addonAfter","ref","EveryIncrease","emphasis","focus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SASMA,EAAY,SAACC,EAAGC,EAAGC,EAAGC,EAAGC,GAQ7B,IAPA,IAAMC,EAAS,GACXC,EAAM,EACJC,GAAS,IAAIC,KAAK,KAAM,EAAG,GAC7BC,EAAO,EACLC,EAAcC,KAAKC,MAAMT,EAAIC,GAC7BS,EAAY,EAAIH,EAAcN,EAAID,EAClCW,EAAYZ,EAAIF,GAAK,IAAMC,GAAK,MAC1B,CACV,IAAIc,EAAI,EACR,GAAIT,GAAOJ,GAAKI,EAAMJ,IAAM,EAAG,CAC7B,IAAMc,EAAIL,KAAKC,MAAMN,EAAMJ,GAC3B,GAAIc,GAAKN,EACPK,EAAIC,EAAIF,EAAYX,EAAIC,OAGxBW,EAAID,EAAYD,EAAYH,GADFN,GAAKD,EAAIW,EAAYX,EAAIC,EAAIU,GAI3D,IAAMG,EAASjB,GAAS,IAAJC,GAAYc,EAEhC,GADAV,EAAOa,KAAK,CAACX,EAAc,GAAND,EAAW,KAAO,IAAMK,KAAKQ,MAAMV,EAAOQ,KAC3DR,EAAO,KAAU,MACrBA,GAAMQ,EACNX,IAEF,OAAOD,GAGHe,EAAa,WACjB,IAAMC,EAAWC,mBADM,EAERC,IAAKC,UAAbC,EAFgB,sBAGKC,mBAAS3B,EAAU,IAAO,EAAG,EAAG,GAAI,IAHzC,mBAGhBM,EAHgB,KAGRsB,EAHQ,KA6EvB,OA/DAC,qBAAU,WACR,IAAMC,EAAgBC,IAAaT,EAASU,SACtCC,EAAS,CACbC,MAAO,CAAC,UAAW,UAAW,UAAW,UAAW,WACpDC,MAAO,CACLC,KAnDM,6CAoDNC,KAAM,SACNC,UAAW,CACTJ,MAAO,YAGXK,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,KAAM,QACNC,MAAO,CACLC,gBAAiB,aAIvBC,KAAM,CACJC,MAAM,EACNT,KAAM,KACNU,MAAO,KACPC,OAAQ,GACRC,cAAc,GAEhBC,SAAU,CACR,CACEJ,MAAM,EACNK,UAAU,EACV3C,MAAO,EACP4C,IAAK,IAGTC,MAAO,CACL,CACEX,KAAM,OACNY,aAAa,EACbC,UAAU,CACRT,MAAK,KAIXU,MAAO,CACL,CACEd,KAAM,QACNa,UAAU,CACRT,MAAK,KAIXxC,OAAQ,CACN,CACEmD,KAAM,qBACNf,KAAM,OACNgB,QAAQ,EACRC,KAAMrD,KAIZwB,EAAc8B,UAAU3B,KACvB,CAAC3B,IACG,sBAAKuD,UAAU,aAAf,UACL,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CACEnC,KAAMA,EACNoC,OAAO,SACPC,cAAe,CAAE7C,OAAQ,QAAS8C,MAAO,IAAKC,SAAU,IAAKC,MAAO,KAAMC,eAAgB,KAC1FC,eA9Ee,WACnBC,QAAQC,IAAI5C,EAAK6C,kBADQ,MAEkC7C,EAAK6C,iBAAxDrD,EAFiB,EAEjBA,OAAQ8C,EAFS,EAETA,MAAOC,EAFE,EAEFA,SAAUC,EAFR,EAEQA,MAAOC,EAFf,EAEeA,gBACnCjD,IAAW8C,IAAUC,IAAaC,IAAUC,GAC/CvC,EAAU5B,GAAWkB,GAAS8C,GAAQC,GAAWC,GAAQC,KAsEzD,UAME,cAAC,IAAKK,KAAN,CAAWf,KAAK,SAASd,MAAM,8BAAUkB,UAAU,qBAAnD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,GAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,oBAAoBC,aAAc,YAKxE,cAAC,IAAKJ,KAAN,CAAWf,KAAK,QAAQd,MAAM,8BAAUkB,UAAU,qBAAlD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,qBAAqBC,aAAc,EAAGC,WAAW,YAKvF,cAAC,IAAKL,KAAN,CAAWf,KAAK,WAAWd,MAAM,8BAAUkB,UAAU,qBAArD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,kBAAkBC,aAAc,EAAGC,WAAW,iBAKpF,cAAC,IAAKL,KAAN,CAAWf,KAAK,QAAQd,MAAM,8BAAUkB,UAAU,qBAAlD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,eAAeC,aAAc,GAAIC,WAAW,iBAKlF,cAAC,IAAKL,KAAN,CAAWf,KAAK,iBAAiBd,MAAM,wBAASkB,UAAU,qBAA1D,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,oBAAoBC,aAAc,eAO5E,qBAAKE,IAAKxD,EAAUuC,UAAU,wBC3J5B7D,EAAY,SAACC,EAAGC,EAAGC,EAAGC,EAAGC,GAQ7B,IAPA,IAAMC,EAAS,GACXC,EAAM,EACJC,GAAS,IAAIC,KAAK,KAAM,EAAG,GAC7BC,EAAO,EACLC,EAAcC,KAAKC,MAAMT,EAAIC,GAC7BS,EAAY,EAAIH,EAAcN,EAAID,EAClCW,EAAYZ,EAAIF,GAAK,IAAMC,GAAK,MAC1B,CACV,IAAIc,EAAI,EACR,GAAIT,GAAOJ,GAAKI,EAAMJ,IAAM,EAAG,CAC7B,IAAMc,EAAIL,KAAKC,MAAMN,EAAMJ,GAC3B,GAAIc,GAAKN,EACPK,EAAIC,EAAIF,EAAYX,EAAIC,OAGxBW,EAAID,EAAYD,EAAYH,GADFN,GAAKD,EAAIW,EAAYX,EAAIC,EAAIU,GAI3D,IAAMG,EAASjB,GAAS,IAAJC,GAAYc,EAEhC,GADAV,EAAOa,KAAK,CAACX,EAAc,GAAND,EAAW,KAAO,IAAMK,KAAKQ,MAAMF,KACpDR,EAAO,KAAU,MACrBA,GAAMQ,EACNX,IAEF,OAAOD,GAGHyE,EAAgB,WACpB,IAAMzD,EAAWC,mBADS,EAEXC,IAAKC,UAAbC,EAFmB,sBAGEC,mBAAS3B,EAAU,IAAO,EAAG,EAAG,GAAI,IAHtC,mBAGnBM,EAHmB,KAGXsB,EAHW,KA+E1B,OAjEAC,qBAAU,WACR,IAAMC,EAAgBC,IAAaT,EAASU,SACtCC,EAAS,CACbC,MAAO,CAAC,WACRC,MAAO,CACLC,KAnDM,2BAoDNC,KAAM,SACNC,UAAW,CACTJ,MAAO,YAGXK,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,KAAM,QACNC,MAAO,CACLC,gBAAiB,aAIvBC,KAAM,CACJC,MAAM,EACNT,KAAM,KACNU,MAAO,KACPC,OAAQ,GACRC,cAAc,GAEhBC,SAAU,CACR,CACEJ,MAAM,EACNK,UAAU,EACV3C,MAAO,EACP4C,IAAK,IAGTC,MAAO,CACL,CACEX,KAAM,OACNY,aAAa,EACbC,UAAU,CACRT,MAAK,KAIXU,MAAO,CACL,CACEd,KAAM,QACNa,UAAU,CACRT,MAAK,KAIXxC,OAAQ,CACN,CACEmD,KAAM,eACNf,KAAM,MACNsC,SAAU,CACRC,MAAO,UAETtB,KAAMrD,KAIZwB,EAAc8B,UAAU3B,KACvB,CAAC3B,IACG,sBAAKuD,UAAU,aAAf,UACL,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CACEnC,KAAMA,EACNoC,OAAO,SACPC,cAAe,CAAE7C,OAAQ,QAAS8C,MAAO,IAAKC,SAAU,IAAKC,MAAO,KAAMC,eAAgB,KAC1FC,eAhFe,WACnBC,QAAQC,IAAI5C,EAAK6C,kBADQ,MAEkC7C,EAAK6C,iBAAxDrD,EAFiB,EAEjBA,OAAQ8C,EAFS,EAETA,MAAOC,EAFE,EAEFA,SAAUC,EAFR,EAEQA,MAAOC,EAFf,EAEeA,gBACnCjD,IAAW8C,IAAUC,IAAaC,IAAUC,GAC/CvC,EAAU5B,GAAWkB,GAAS8C,GAAQC,GAAWC,GAAQC,KAwEzD,UAME,cAAC,IAAKK,KAAN,CAAWf,KAAK,SAASd,MAAM,8BAAUkB,UAAU,qBAAnD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,GAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,oBAAoBC,aAAc,YAKxE,cAAC,IAAKJ,KAAN,CAAWf,KAAK,QAAQd,MAAM,8BAAUkB,UAAU,qBAAlD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,qBAAqBC,aAAc,EAAGC,WAAW,YAKvF,cAAC,IAAKL,KAAN,CAAWf,KAAK,WAAWd,MAAM,8BAAUkB,UAAU,qBAArD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,kBAAkBC,aAAc,EAAGC,WAAW,iBAKpF,cAAC,IAAKL,KAAN,CAAWf,KAAK,QAAQd,MAAM,8BAAUkB,UAAU,qBAAlD,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,eAAeC,aAAc,GAAIC,WAAW,iBAKlF,cAAC,IAAKL,KAAN,CAAWf,KAAK,iBAAiBd,MAAM,wBAASkB,UAAU,qBAA1D,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKY,KAAM,EAAX,SACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,YAAY,oBAAoBC,aAAc,eAO5E,qBAAKE,IAAKxD,EAAUuC,UAAU,wBCpJnBqB,MAdf,WAEE,OACE,sBAAKrB,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,UCAOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c0bbeb03.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col } from 'antd';\nimport './lockAmount.css';\n\nconst Title = '每日最大流通量'\n//1 2 3  4  5   \n// 4 7 10 13 16 19 \n// 每日解锁量 初次解锁量  解锁间隔 解锁次数\nconst getSeries = (a, b, c, d, e) => {\n  const series = []\n  let day = 0\n  const start = +new Date(2022, 7, 1)\n  let prev = 0\n  const actualTimes = Math.floor(d / e)\n  const leftRatio = 1 - actualTimes * e / d\n  const baseCount = c * a * (100 - b) * 0.01\n  while(true) {\n    let g = 0\n    if (day >= c && day % c === 0) {\n      const f = Math.floor(day / c)\n      if (f <= actualTimes) {\n        g = f * baseCount / d * e\n      } else {\n        const everyUnlockNumber = e <= d ? baseCount / d * e : baseCount\n        g = baseCount * leftRatio + actualTimes * everyUnlockNumber\n      }\n    }\n    const amount = a * (b * 0.01) + g\n    series.push([start + day * 24 * 3600 * 1000, Math.round(prev + amount)])\n    if (prev > 35000000) break\n    prev+=amount\n    day++\n  }\n  return series\n}\n\nconst LockAmount = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [series, setSeries] = useState(getSeries(50000, 5, 3, 60, 1))\n\n  const onFormChange = () => {\n    console.log(form.getFieldsValue())\n    const { amount, ratio, interval, times, accelerateRate } = form.getFieldsValue()\n    if (+amount && +ratio && +interval && +times && +accelerateRate) {\n      setSeries(getSeries(+amount, +ratio, +interval, +times, +accelerateRate))\n    }\n  }\n  \n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      dataZoom: [\n        {\n          show: true,\n          realtime: true,\n          start: 0,\n          end: 5\n        }\n      ],\n      xAxis: [\n        {\n          type: 'time',\n          boundaryGap: false,\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '解锁量',\n          type: 'line',\n          smooth: true,\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ amount: '50000', ratio: '5', interval: '3', times: '60', accelerateRate: '1' }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"amount\" label=\"每日产出(a)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={18}>\n              <Input size=\"small\" placeholder=\"daily lock number\" defaultValue={50000} />\n            </Col>\n          </Row>\n        </Form.Item>\n        \n        <Form.Item name=\"ratio\" label=\"首次解锁(b)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"First unlock ratio\" defaultValue={5} addonAfter=\"%\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"interval\" label=\"解锁间隔(c)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock interval\" defaultValue={3} addonAfter=\"天\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"times\" label=\"解锁次数(d)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock times\" defaultValue={60} addonAfter=\"次\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"accelerateRate\" label=\"加速率(e)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"acceleration rate\" defaultValue={1} />\n            </Col>\n          </Row>\n        </Form.Item>\n\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { LockAmount }","import React, { useRef, useEffect, useState } from 'react'\nimport * as echarts from \"echarts\"\nimport { Form, Input, Row, Col } from 'antd';\nimport './lockAmount.css';\n\nconst Title = '每日增量'\n//1 2 3  4  5   \n// 4 7 10 13 16 19 \n// 每日解锁量 初次解锁量  解锁间隔 解锁次数\nconst getSeries = (a, b, c, d, e) => {\n  const series = []\n  let day = 0\n  const start = +new Date(2022, 7, 1)\n  let prev = 0\n  const actualTimes = Math.floor(d / e)\n  const leftRatio = 1 - actualTimes * e / d\n  const baseCount = c * a * (100 - b) * 0.01\n  while(true) {\n    let g = 0\n    if (day >= c && day % c === 0) {\n      const f = Math.floor(day / c)\n      if (f <= actualTimes) {\n        g = f * baseCount / d * e\n      } else {\n        const everyUnlockNumber = e <= d ? baseCount / d * e : baseCount\n        g = baseCount * leftRatio + actualTimes * everyUnlockNumber\n      }\n    }\n    const amount = a * (b * 0.01) + g\n    series.push([start + day * 24 * 3600 * 1000, Math.round(amount)])\n    if (prev > 35000000) break\n    prev+=amount\n    day++\n  }\n  return series\n}\n\nconst EveryIncrease = () => {\n  const chartRef = useRef()\n  const [form] = Form.useForm()\n  const [series, setSeries] = useState(getSeries(50000, 5, 3, 60, 1))\n\n  const onFormChange = () => {\n    console.log(form.getFieldsValue())\n    const { amount, ratio, interval, times, accelerateRate } = form.getFieldsValue()\n    if (+amount && +ratio && +interval && +times && +accelerateRate) {\n      setSeries(getSeries(+amount, +ratio, +interval, +times, +accelerateRate))\n    }\n  }\n  \n\n  useEffect(() => {\n    const chartInstance = echarts.init(chartRef.current)\n    const option = {\n      color: ['#00DDFF'],\n      title: {\n        text: Title,\n        left: 'center',\n        textStyle: {\n          color: '#FFFFFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      },\n      grid: {\n        show: false,\n        left: '3%',\n        right: '4%',\n        bottom: 60,\n        containLabel: true\n      },\n      dataZoom: [\n        {\n          show: true,\n          realtime: true,\n          start: 0,\n          end: 5\n        }\n      ],\n      xAxis: [\n        {\n          type: 'time',\n          boundaryGap: false,\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      yAxis: [\n        {\n          type: 'value',\n          splitLine:{\n            show:false\n      　　 }\n        }\n      ],\n      series: [\n        {\n          name: '增量',\n          type: 'bar',\n          emphasis: {\n            focus: 'series'\n          },\n          data: series\n        }\n      ]\n    }\n    chartInstance.setOption(option)\n  }, [series])\n  return <div className=\"chart-wrap\">\n    <div className=\"chart-header\">\n      <Form\n        form={form}\n        layout=\"inline\"\n        initialValues={{ amount: '50000', ratio: '5', interval: '3', times: '60', accelerateRate: '1' }}\n        onValuesChange={onFormChange}\n      >\n        <Form.Item name=\"amount\" label=\"每日产出(a)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={18}>\n              <Input size=\"small\" placeholder=\"daily lock number\" defaultValue={50000} />\n            </Col>\n          </Row>\n        </Form.Item>\n        \n        <Form.Item name=\"ratio\" label=\"首次解锁(b)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"First unlock ratio\" defaultValue={5} addonAfter=\"%\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"interval\" label=\"解锁间隔(c)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock interval\" defaultValue={3} addonAfter=\"天\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"times\" label=\"解锁次数(d)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"unlock times\" defaultValue={60} addonAfter=\"次\" />\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item name=\"accelerateRate\" label=\"加速率(e)\" className=\"chart-header-label\">\n          <Row>\n            <Col span={8}>\n              <Input size=\"small\" placeholder=\"acceleration rate\" defaultValue={1} />\n            </Col>\n          </Row>\n        </Form.Item>\n\n      </Form>\n    </div>\n    <div ref={chartRef} className=\"chart-container\" />\n  </div>\n}\n\nexport { EveryIncrease }","import React from 'react'\nimport './App.css';\nimport { LockAmount, EveryIncrease } from './charts'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <div className=\"line-container\">\n        <LockAmount />\n      </div>\n      <div className=\"line-container\">\n        <EveryIncrease />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}